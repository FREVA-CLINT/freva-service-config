#!/usr/bin/env bash
set  -o nounset -o pipefail -o errexit
export SERVICE=solr

temp_dir=$(mktemp -d)
export SOLR_PORT=${API_SOLR_PORT:-8983}
export SOLR_HEAP=${API_SOLR_HEAP:-4g}
export SOLR_CORE=${API_SOLR_CORE:-files}
export SOLR_LOGS_DIR=$LOG_DIR
export SOLR_JETTY_HOST="0.0.0.0"
export SOLR_PID_DIR=/tmp/$SERVICE

mkdir -p $SOLR_PID_DIR

clenup(){
    rm -fr $SOLR_PID_DIR
    rm -rf $temp_dir
    solr stop -p $SOLR_PORT
}
trap cleanup EXIT

configure_solr=false
is_solr_running(){
     curl -s "http://localhost:$1/solr/admin/info/system"| grep -q "solr_home"
}
for core in $SOLR_CORE latest;do
    if [ ! -f "$DATA_DIR/$core/core.properties" ];then
        configure_solr=true
    fi
    if $configure_solr ;then
        if ! is_solr_running $SOLR_PORT ;then
            echo "Starting Solr on port $SOLR_PORT ..."
            solr start \
                --force -m $SOLR_HEAP -s ${DATA_DIR} \
                -p $SOLR_PORT -Dsolr.log.dir=$temp_dir -q --no-prompt &> $temp_dir/solr.log &
            timeout 20 bash -c 'until curl -s http://localhost:'"$SOLR_PORT"'/solr/admin/ping;do sleep 2; done' ||{
                echo "Error: Solr did not start within 60 seconds." >&2
                cat $temp_dir/solr.log >&2
            }
        fi
        echo "Creating core $core ..."
        solr create -c $core --solr-url http://localhost:$SOLR_PORT
        cp $CONFIG_DIR/*.{txt,xml} $DATA_DIR/$core/conf
        curl http://localhost:$SOLR_PORT/solr/$core/config -d '{"set-user-property": {"update.autoCreateFields":"false"}}'
    fi
    for file in managed-schema.xml synonyms.txt; do
        if [ ! -f "$DATA_DIR/$core/conf/$file" ];then
            rm -f "$DATA_DIR/$core/conf/$file" 2> /dev/null
            cp "$CONFIG_DIR/$file" "$DATA_DIR/$core/conf/"
        fi
    done
 done
if $configure_solr ;then
    solr stop -p $SOLR_PORT
fi
rm -rf "$temp_dir"
exec solr start -f -force -s ${DATA_DIR}
